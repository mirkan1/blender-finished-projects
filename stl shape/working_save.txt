


import os,sys, inspect, random, re, bpy
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.append(parentdir)

def main():
    try:
        # you should import the .stl file
        # .stl object need to be the only object in the project
        imported_obj = bpy.data.objects[0] # might have a diffirent name
        print(imported_obj)
    except KeyError:
        return print("object did not found, probable you should delete the camera objects")

    # creates a plane object to project the .stl file object into it, and resizes it
    bpy.ops.mesh.primitive_plane_add(enter_editmode=False, location=(-45, 50, 10))
    plane = bpy.data.objects["Plane"] # plane object
    plane.select_set(True)
    bpy.ops.transform.resize(value=(20, 20, 20), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)
    bpy.ops.transform.resize(value=(20, 20, 20), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)
    #import pdb;pdb.set_trace()

    # adds shrimkwrap to imported_obj
    plane.select_set(False)
    imported_obj.select_set(True)
    bpy.context.view_layer.objects.active = imported_obj
    bpy.ops.object.modifier_add(type='SHRINKWRAP')

    # meshes objects together
    bpy.context.object.modifiers["Shrinkwrap"].target = plane

#    tower = bpy.data.objects['Eiffel tower sample']
#    random = random.randint(0, 10000000000000000000000) # random number to save file unique
#    filepath = parentdir + "\\" + str(random) + "_example_" + ".svg"

    # C:\Program Files\Blender Foundation\Blender 2.82\2.82\scripts\addons\object_print3d_utils
    
main()